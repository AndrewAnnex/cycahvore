name: PR and Merge builds (on main branch)

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build_x86:
    strategy:
      fail-fast: false
      matrix:
        include:
          - config: { "python": "cp310-*", "name": "Linux", "os": "ubuntu-latest", "arch": "x86_64" }
          - config: { "python": "cp311-*", "name": "Linux", "os": "ubuntu-latest", "arch": "x86_64" }
          - config: { "python": "cp312-*", "name": "Linux", "os": "ubuntu-latest", "arch": "x86_64" }
          - config: { "python": "cp310-*", "name": "macOS", "os": "macos-latest", "arch": "x86_64" }
          - config: { "python": "cp311-*", "name": "macOS", "os": "macos-latest", "arch": "x86_64" }
          - config: { "python": "cp312-*", "name": "macOS", "os": "macos-latest", "arch": "x86_64" }
          - config: { "python": "cp310-*", "name": "macOS", "os": "macos-latest", "arch": "arm64" }
          - config: { "python": "cp311-*", "name": "macOS", "os": "macos-latest", "arch": "arm64" }
          - config: { "python": "cp312-*", "name": "macOS", "os": "macos-latest", "arch": "arm64" }
          - config: { "python": "cp310-*", "name": "Windows", "os": "windows-latest", "arch": "AMD64" }
          - config: { "python": "cp311-*", "name": "Windows", "os": "windows-latest", "arch": "AMD64" }
          - config: { "python": "cp312-*", "name": "Windows", "os": "windows-latest", "arch": "AMD64" }
    name: Build cycahvore
    env:
      CIBW_ARCHS: ${{ matrix.config.arch }}
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: Checkout cycahvore
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Windows disable protectNTFS
        if: runner.os == 'Windows'
        run:
          git config --global core.protectNTFS false
      - name: Checkout VICAR
        uses: actions/checkout@v4
        with:
          repository: NASA-AMMOS/VICAR
          path: "src/VICAR"
          fetch-depth: null
          filter: blob:none
      - name: ls
        run: |
          ls ./*
          ls ./*/*
      - name: Set up Python 🐍
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          check-latest: true
      - name: Install pip
        run: |
          python -m pip install --upgrade pip
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel
      - name: set additional environment variables
        if: runner.name == 'macOS' && runner.arch == 'arm64'
        run: |
          echo "CIBW_ARCHS_MACOS=arm64" >> $GITHUB_ENV
          echo "ARCHFLAGS='-arch arm64'" >> $GITHUB_ENV
      - name: Build the wheel
        env:
          CIBW_BUILD: ${{ matrix.config.python }}
          CIBW_ARCHS_LINUX: ${{ matrix.config.arch }}
          CIBW_SKIP: "*-win32 pypy* pp* *-manylinux_i686 *-musllinux_i686 *-musllinux_aarch64 *-musllinux_x86_64"
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2014"
        run: |
          env | grep CIBW
          env | grep ARCH
          python -m cibuildwheel --output-dir dist
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./dist/*.whl
